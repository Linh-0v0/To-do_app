// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String  @id
  email     String  @unique
  username  String?
  createdAt DateTime @default(now())
  fcmToken  String?  // Store the user's FCM token
  tasks     Task[]  // One user can own many tasks
  taggedTasks TaskTaggedUsers[] // Fix: Define the opposite relation
}

model Task {
  id        String  @id @default(uuid())
  userId    String  
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade) 
  title     String
  description String?
  status    Boolean @default(false)
  priority  Int     @default(0)
  dueDate   DateTime?
  reminder  DateTime?
  repeatType RepeatType @default(none)
  taggedUsers TaskTaggedUsers[]
}

model TaskTaggedUsers {
  taskId String @map("task_id")
  task   Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([taskId, userId]) // âœ… Composite Primary Key
}

enum RepeatType {
  none
  daily
  weekly
  monthly
  yearly
  custom
}
